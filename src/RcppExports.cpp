// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// aligned_BLAST_sequences
Rcpp::CharacterVector aligned_BLAST_sequences(std::string FASTQ_file_path, Rcpp::StringVector aligned_reads, const char * output_path, bool aligned);
RcppExport SEXP _ssBLAST_aligned_BLAST_sequences(SEXP FASTQ_file_pathSEXP, SEXP aligned_readsSEXP, SEXP output_pathSEXP, SEXP alignedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type FASTQ_file_path(FASTQ_file_pathSEXP);
    Rcpp::traits::input_parameter< Rcpp::StringVector >::type aligned_reads(aligned_readsSEXP);
    Rcpp::traits::input_parameter< const char * >::type output_path(output_pathSEXP);
    Rcpp::traits::input_parameter< bool >::type aligned(alignedSEXP);
    rcpp_result_gen = Rcpp::wrap(aligned_BLAST_sequences(FASTQ_file_path, aligned_reads, output_path, aligned));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ssBLAST_aligned_BLAST_sequences", (DL_FUNC) &_ssBLAST_aligned_BLAST_sequences, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_ssBLAST(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
